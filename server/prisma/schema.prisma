generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  username String @unique
  email    String @unique

  lists       List[]
  tasks       Task[]
  activityLog ActivityLog[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model List {
  id    String @id @default(uuid())
  title String @unique
  order Int    @default(0)

  authorId    String
  author      User          @relation(fields: [authorId], references: [id])
  tasks       Task[]
  activityLog ActivityLog[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([authorId])
}

enum STATUS {
  IN_PROGRESS
  COMPLETED
  DELETED
}

enum PRIORITY {
  LOW
  MEDIUM
  HIGH
}

model Task {
  id          String    @id @default(uuid())
  title       String
  description String?   @db.Text
  status      STATUS    @default(IN_PROGRESS)
  priority    PRIORITY  @default(MEDIUM)
  dueDate     DateTime?
  order       Int       @default(0)

  authorId    String
  author      User          @relation(fields: [authorId], references: [id], onDelete: Cascade)
  listId      String
  list        List          @relation(fields: [listId], references: [id], onDelete: Cascade)
  activityLog ActivityLog[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([authorId, listId])
}

enum ACTION {
  CREATE
  RENAME
  MOVE
  ADD_DESCRIPTION
  CHANGE_DESCRIPTION
  CHANGE_STATUS
  CHANGE_PRIORITY
  ADD_DUE_DATE
  CHANGE_DUE_DATE
  DELETE
}

enum ENTITY_TYPE {
  LIST
  TASK
}

model ActivityLog {
  id         String      @id @default(uuid())
  entityType ENTITY_TYPE
  action     ACTION
  prevValue  String?
  newValue   String?

  // TODO: Add ondelete cascade
  authorId String
  author   User    @relation(fields: [authorId], references: [id])
  taskId   String?
  task     Task?   @relation(fields: [taskId], references: [id])
  listId   String?
  list     List?   @relation(fields: [listId], references: [id])

  createdAt DateTime @default(now())

  @@index([authorId, taskId])
  @@index([authorId, listId])
}
